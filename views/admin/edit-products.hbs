
<section class="edit-product-section">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-md-8 col-lg-6">
        <h2 class="text-center mb-4">Edit Technician</h2>

        <div class="card form-card">
          <div class="card-body">
            <!-- Set enctype to handle file uploads -->
            <form 
              action="/admin/edit-product/{{product._id}}" 
              method="post" 
              enctype="multipart/form-data"
            >
              <!-- Name Input -->
              <div class="mb-3">
                <label for="Name" class="form-label">Name of Technician</label>
                <input 
                  type="text" 
                  name="name" 
                  id="Name" 
                  class="form-control input-dark" 
                  value="{{product.name}}" 
                  required>
              </div>

              <!-- Category Input -->
              <!-- Category Select Box -->
<div class="mb-3">
  <label for="Category" class="form-label">Category</label>
  <select id="Category" name="category" class="form-control input-dark" required onchange="checkCategory(this)">
    <option value="" disabled>Select a category</option>
    <!-- Options will be added dynamically -->
  </select>
</div>


              <!-- Price Input -->
              <div class="mb-3">
                <label for="Price" class="form-label">Price per Work</label>
                <input 
                  type="number" 
                  name="price" 
                  id="Price" 
                  class="form-control input-dark" 
                  value="{{product.price}}" 
                  step="0.01" 
                  required>
              </div>

              <!-- Quantity Input -->
              <div class="mb-3">
                <label for="Quantity" class="form-label">Work Slot</label>
                <input 
                  type="number" 
                  name="quantity" 
                  id="Quantity" 
                  class="form-control input-dark" 
                  value="{{product.quantity}}" 
                  min="1" 
                  required>
              </div>

              <!-- Description Input -->
              <div class="mb-3">
                <label for="Description" class="form-label">Description of the Technician</label>
                <textarea 
                  name="description" 
                  id="Description" 
                  class="form-control input-dark" 
                  rows="3" 
                  required>{{product.description}}</textarea>
              </div>

              <!-- Product Image Input -->
              <div class="mb-3">
                <label for="Image" class="form-label">Photo of Technician</label>
                <!-- Existing image preview -->
                <div class="text-center mb-2">
                  {{#if product.imagePath}}
                    <img id="imagePreview" src="{{product.imagePath}}" alt="Product Image" class="img-thumbnail">
                  {{else}}
                    <p>No image available</p>
                  {{/if}}
                </div>
                <!-- File input for updating the image -->
                <input 
                  type="file" 
                  name="image" 
                  id="Image" 
                  class="form-control input-dark" 
                  accept="image/*" 
                  onchange="previewImage(event)">
              </div>

              <!-- Submit Button -->
              <button type="submit" class="btn btn-success w-100">Update Technician</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Custom CSS -->
<style>
  /* Dark Theme Background */
  .edit-product-section {
    background-color: #121212; /* Dark background */
    color: #e0e0e0; /* Light text */
    padding: 50px 0;
  }

  /* Form Card */
  .form-card {
    background-color: #1e1e1e; /* Slightly lighter dark */
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    padding: 20px;
  }

  /* Input Fields */
  .input-dark {
    background-color: #2c2c2c;
    color: #ffffff;
    border: 1px solid #444;
  }

  .input-dark::placeholder {
    color: #bbbbbb;
  }

  .input-dark:focus {
    background-color: #333;
    color: #fff;
    border-color: #28a745; /* Green focus border */
    outline: none;
  }

  /* Submit Button */
  .btn-success {
    background-color: #28a745;
    border: none;
  }

  .btn-success:hover {
    background-color: #218838;
  }

  /* Image Preview */
  .img-thumbnail {
    max-width: 250px;
    border-radius: 10px;
    display: block;
    margin: 0 auto;
  }
</style>

<script>
  // Function to preview the image before submission
  function previewImage(event) {
    const imagePreview = document.getElementById('imagePreview');
    const file = event.target.files[0];

    if (file) {
      // Create a URL for the selected file
      const reader = new FileReader();
      
      // When the file is read, update the image preview
      reader.onload = function (e) {
        imagePreview.src = e.target.result;
      };

      reader.readAsDataURL(file);
    }
  }
</script>


<script>
  document.addEventListener("DOMContentLoaded", async () => {
    try {
      const response = await fetch("/admin/getcategories");
      const data = await response.json();

      if (data.success) {
        const categorySelect = document.getElementById("Category");
        const currentCategory = "{{product.category}}"; // Fetch the current category

        categorySelect.innerHTML = `<option value="" disabled>Select a category</option>`;

        // Populate categories dynamically
        data.categories.forEach((category) => {
          const option = document.createElement("option");
          option.value = category.name;
          option.textContent = category.name;
          if (category.name === currentCategory) {
            option.selected = true; // Pre-select the current category
          }
          categorySelect.appendChild(option);
        });

        // Append "Add New Category" option at the end
        const addNewOption = document.createElement("option");
        addNewOption.value = "new";
        addNewOption.textContent = "+ Add New Category";
        categorySelect.appendChild(addNewOption);
      } else {
        console.error("Failed to fetch categories");
      }
    } catch (error) {
      console.error("Error loading categories:", error);
    }
  });

  // Function to handle adding a new category
  async function checkCategory(select) {
    if (select.value === "new") {
      const newCategory = prompt("Enter new category name:");

      if (newCategory) {
        try {
          const response = await fetch("/admin/addcategory", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ category: newCategory }),
          });

          const data = await response.json();
          if (data.success) {
            const categorySelect = document.getElementById("Category");

            // Add new category to the dropdown
            const newOption = document.createElement("option");
            newOption.value = newCategory;
            newOption.textContent = newCategory;
            categorySelect.insertBefore(newOption, categorySelect.lastElementChild);

            categorySelect.value = newCategory; // Select the newly added category
          } else {
            alert("Error: " + data.message);
          }
        } catch (error) {
          console.error("Error adding category:", error);
        }
      }

      select.value = ""; // Reset dropdown selection
    }
  }
</script>
