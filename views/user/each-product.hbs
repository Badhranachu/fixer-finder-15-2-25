<div class="product-details">
  <!-- Product Image -->
  <div class="product-image">
    <img 
      src="/product-images/{{product._id}}.jpg" 
      alt="{{product.name}}" 
      onerror="this.onerror=null;this.src='/product-images/placeholder.jpg';"
      class="product-img"
    />
  </div>

  <!-- Product Info -->
  <div class="product-info">
    <h2 class="product-name">{{product.name}}</h2>
    <p class="product-category">Category: <span>{{product.category}}</span></p>

    <!-- Product Description -->
    <div class="product-description">
      <h4>Description:</h4>
      <pre style="color: yellow;">{{product.description}}</pre>
    </div>

    <!-- Product Price -->
    <h4 class="product-price" style="color: {{#if product.isActive}}green{{else}}red{{/if}};">
      â‚¹ {{product.price}}
    </h4>

    <!-- Button Section -->
    {{#if product.isActive}}
      <div class="button-group" style="display: flex; justify-content: space-between; gap: 10px; align-items: center;">
        <!-- Add to Cart Button -->
        {{!-- <form id="addToCartForm" style="flex: 1;">
          <input type="hidden" name="productId" value="{{product._id}}">
          <input type="hidden" name="productName" value="{{product.name}}">
          <input type="hidden" name="userId" value="{{user._id}}">
          <button type="submit" class="btn add-to-cart" style="width: 100%; padding: 10px; background-color: #4CAF50; color: white; font-size: 16px; display: flex; align-items: center; justify-content: center;">
            ðŸ›’ ADD TO CART
          </button>
        </form> --}}

        <!-- Buy Now Button -->
        <a href="/buy/{{product._id}}" style="flex: 1; text-decoration: none;">
          <button type="button" class="btn buy-now" style="width: 100%; padding: 10px; background-color: #FF5733; color: white; font-size: 16px; display: flex; align-items: center; justify-content: center;">
           Book Slot
          </button>
        </a>
      </div>
    {{else}}
      <p class="out-of-stock">Out of Stock</p>
    {{/if}}

    <!-- Additional Information -->
    {{#if product.extra}}
      <div class="extra-info">
        <h4>Additional Information:</h4>
        <ul>
          {{#each product.extra}}
            <li>{{this}}</li>
          {{/each}}
        </ul>
      </div>
    {{/if}}
  </div>
</div>

<!-- Bootstrap Modal for Notification -->
<div class="modal fade" id="cartModal" tabindex="-1" aria-labelledby="cartModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="cartModalLabel">Cart Update</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="cartModalMessage">
        <!-- Success message will be inserted here -->
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>


<!-- CSS Styles -->
<style>
  /* New Modern Dark Theme */
.product-details {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    padding: 20px;
    background: linear-gradient(135deg, #1e1e2f, #252540);
    border-radius: 12px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
    color: #ffffff;
}

.product-image {
    flex: 1;
    min-width: 300px;
    height: 100%;
    padding: 10px;
    border-radius: 10px;
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
}

.product-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 10px;
    transition: transform 0.3s ease-in-out;
}

.product-img:hover {
    transform: scale(1.05);
}

.product-info {
    flex: 2;
    min-width: 300px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 20px;
}

.product-name {
    font-size: 24px;
    font-weight: bold;
    color: #ffcc00;
    margin-bottom: 10px;
}

.product-category {
    font-size: 16px;
    color: #a0a0d0;
    margin-bottom: 10px;
}

.product-description {
    font-size: 16px;
    color: #ddd;
    padding: 15px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 8px;
}

.product-price {
    font-size: 26px;
    font-weight: bold;
    color: #0f0;
}

.button-group {
    display: flex;
    gap: 12px;
    align-items: center;
}

.buy-now {
    flex: 1;
    background: linear-gradient(90deg, #ff5733, #ff8c42);
    padding: 12px;
    font-size: 18px;
    font-weight: bold;
    border: none;
    cursor: pointer;
    color: white;
    border-radius: 8px;
    transition: 0.3s;
}

.buy-now:hover {
    background: linear-gradient(90deg, #e64722, #ff7045);
    transform: scale(1.05);
}

.out-of-stock {
    color: #ff4444;
    font-size: 18px;
    font-weight: bold;
}

.extra-info h4 {
    color: #ffcc00;
    font-size: 20px;
    margin-bottom: 10px;
}

</style>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  document.getElementById("addToCartForm").addEventListener("submit", async function(event) {
    event.preventDefault(); // Prevent page reload

    // Extract values
    const formData = new FormData(this);
    const productId = formData.get("productId");
    const productName = formData.get("productName");
    const userId = formData.get("userId");

    try {
      const response = await fetch('/addtocart', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, productName, userId })
      });

      const data = await response.json();

      // Determine SweetAlert2 notification type
      let iconType = "success";
      let alertMessage = data.message || `Added "${productName}" to cart`;

      if (data.message && data.message.includes("already in cart")) {
        iconType = "info";  // Product already in cart
      } else if (data.message && data.message.includes("removed")) {
        iconType = "warning"; // Product removed from cart
        alertMessage = `Removed "${productName}" from cart`;
      }

      // Show SweetAlert2 Notification
      Swal.fire({
        toast: true,
        position: "top",
        icon: iconType,
        title: alertMessage,
        showConfirmButton: false,
        timer: 2500, // Alert disappears after 2.5 seconds
        timerProgressBar: true
      });

    } catch (error) {
      console.error("Error adding to cart:", error);

      // Show Error Alert
      Swal.fire({
        toast: true,
        position: "top",
        icon: "error",
        title: "An error occurred. Please try again.",
        showConfirmButton: false,
        timer: 2500,
        timerProgressBar: true
      });
    }
  });
</script>
