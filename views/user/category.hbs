<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Category Products</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEJx3tN0k5z9+zeZx6u0t3yP0r88j3e6n5LftPB6y9v5j5/2W0qobQKpnxz01" crossorigin="anonymous">
  
  <!-- Custom CSS -->
  <style>
    body {
      background-color: #f8f9fa;
      font-family: Arial, sans-serif;
    }
    .container {
      max-width: 1200px;
      margin-top: 50px;
    }
    .form-label {
      font-size: 1.1rem;
      font-weight: bold;
    }
    .btn-primary {
      background-color: #007bff;
      border-color: #007bff;
    }
    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }
    table {
      margin-top: 30px;
      border-collapse: collapse;
      width: 100%;
    }
    th, td {
      padding: 15px;
      text-align: center;
    }
    th {
      background-color: #007bff;
      color: white;
      font-size: 1.2rem;
    }
    td {
      background-color: #ffffff;
      font-size: 1.1rem;
    }
    img {
      width: 120px;
      height: auto;
      border-radius: 8px;
    }
    .alert {
      margin-top: 20px;
    }
  </style>
</head>
<body>

<div class="container">
    <!-- Form to select category -->
    <form action="/category" method="post" class="shadow p-4 rounded bg-white">
    <div class="mb-3">
        <label for="category" class="form-label">Category</label>
        <select id="category" name="category" class="form-control input-dark" required onchange="checkCategory(this)">
        <option value="" disabled selected>Select a category</option>
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
    </form>

    <!-- Category Products Table -->
    <h2 class="mt-5">Technicians in {{categoryData.name}} Category</h2>

    {{#if products.length}}
    <table class="table table-bordered table-striped">
        <thead>
        <tr>
            {{!-- <th>Product ID</th> --}}
            <th>Product Name</th>
            <th>Price</th>
            <th>Description</th>
            <th>Image</th>
        </tr>
        </thead>
        <tbody>
        {{#each products}}
            <tr>
                {{!-- <td>{{_id}}</td> --}}
            <td>{{name}}</td>
            <td>${{price}}</td>
            <td>{{description}}</td>
            <td>
                <!-- Image is now a clickable link to the product details page -->
                <a href="/each-product/{{_id}}">
                <img src="{{imagePath}}" alt="{{name}}" />
                </a>
            </td>
            </tr>
        {{/each}}
        </tbody>
    </table>
    {{else}}
    <p class="alert alert-warning">No products available in this category.</p>
    {{/if}}
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pzjw8f+ua7Kw1TIq0Wb8mNqjhz+zpt0YbdAlOq3ymA0hUqP1PhbChR+h11pq5dbL" crossorigin="anonymous"></script>

<script>
    // Fetch categories from the database on page load
    document.addEventListener("DOMContentLoaded", async () => {
    try {
        const response = await fetch("/getcategories"); // API call to fetch categories
        const data = await response.json();

        if (data.success) {
        const categorySelect = document.getElementById("category");

        // Populate categories dynamically
        data.categories.forEach((category) => {
            const option = document.createElement("option");
            option.value = category.name;
            option.textContent = category.name;
            categorySelect.appendChild(option);
        });

        } else {
        console.error("Failed to fetch categories");
        }
    } catch (error) {
        console.error("Error loading categories:", error);
    }
    });

    // Handle adding new category
    async function checkCategory(select) {
    if (select.value === "new") {
        const newCategory = prompt("Enter new category name:");

        if (newCategory) {
        try {
            const response = await fetch("/admin/addcategory", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ category: newCategory }),
            });

            const data = await response.json();
            if (data.success) {
            const categorySelect = document.getElementById("category");

            // Add new category to the dropdown
            const newOption = document.createElement("option");
            newOption.value = newCategory;
            newOption.textContent = newCategory;
            categorySelect.insertBefore(newOption, categorySelect.lastElementChild);

            categorySelect.value = newCategory; // Select the newly added category
            } else {
            alert("Error: " + data.message);
            }
        } catch (error) {
            console.error("Error adding category:", error);
        }
        }

        select.value = ""; // Reset dropdown selection
    }
    }
</script>

</body>
</html>
